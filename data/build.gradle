apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'


android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false;
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'
        // Due to Robolectric that modifies the manifest when running tests
    }
}

dependencies {
    compile project(':domain')

    def dataDependencies = rootProject.ext.dataDependencies

    compile project(':domain')

    apt dataDependencies.daggerCompiler
    provided dataDependencies.javaxAnnotation
    compile dataDependencies.dagger
    compile dataDependencies.okHttp
    compile dataDependencies.okHttpLogging
    compile dataDependencies.retrofit
    compile dataDependencies.adapter_rxjava
    compile dataDependencies.converter_gson
    compile dataDependencies.rxJava
    compile dataDependencies.androidAnnotations
}